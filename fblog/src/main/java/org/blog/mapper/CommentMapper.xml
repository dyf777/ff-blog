<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.blog.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="org.blog.model.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="admin_comment" property="adminComment" jdbcType="BIT" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="blog_id" property="blogId" jdbcType="BIGINT" />
    <result column="parent_comment_id" property="parentCommentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, admin_comment, avatar, content, create_time, email, nickname, blog_id, parent_comment_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.blog.model.Comment" >
    insert into t_comment (id, admin_comment, avatar, 
      content, create_time, email, 
      nickname, blog_id, parent_comment_id
      )
    values (#{id,jdbcType=BIGINT}, #{adminComment,jdbcType=BIT}, #{avatar,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{blogId,jdbcType=BIGINT}, #{parentCommentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.blog.model.Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="adminComment != null" >
        admin_comment,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="parentCommentId != null" >
        parent_comment_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="adminComment != null" >
        #{adminComment,jdbcType=BIT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null" >
        #{parentCommentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.blog.model.Comment" >
    update t_comment
    <set >
      <if test="adminComment != null" >
        admin_comment = #{adminComment,jdbcType=BIT},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null" >
        parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.blog.model.Comment" >
    update t_comment
    set admin_comment = #{adminComment,jdbcType=BIT},
      avatar = #{avatar,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      blog_id = #{blogId,jdbcType=BIGINT},
      parent_comment_id = #{parentCommentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>